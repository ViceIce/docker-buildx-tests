name: Docker CI

on:
  push:
  pull_request:

env:
  PLATFORM: linux/amd64
  DOCKER_CACHE_TAG: _cache
  DOCKER_REPO: renovate/renovate
  CACHE_VERSION: v1

jobs:
  local_cache:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - run: docker buildx ls

      - name: Cache docker layer
        id: docker_cache
        uses: actions/cache@v1
        with:
          path: tmp/docker
          key: docker_cache-${{ env.CACHE_VERSION }}-${{ hashFiles('Dockerfile*') }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            docker_cache-${{ env.CACHE_VERSION }}-

      - name: Prepare docker cache
        if: steps.docker_cache.outputs.cache-hit != 'true'
        run: docker buildx bake -f buildx.hcl base

      - name: Build the Docker images
        run: |
          docker buildx bake -f buildx.hcl --set cache.output=type=docker

      - name: Test the Docker full image
        run: |
          docker run --rm -t ${DOCKER_REPO} yarn --version

      - name: Test the Docker slim image
        run: |
          docker run --rm -t ${DOCKER_REPO}:slim yarn --version

      - name: Image history
        run: docker history ${DOCKER_REPO}
      - name: Image size
        run: docker image ls | grep ${DOCKER_REPO}

  cache_to_registry:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - run: docker buildx ls

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build the Docker images
        continue-on-error: true
        run: |
          docker buildx bake -f buildx.hcl --set test.cache-to=docker.pkg.github.com/${{ github.repository }}/test:cache-slim test

  cache_inline:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - run: docker buildx ls

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build the Docker images
        continue-on-error: true
        run: |
          docker buildx bake -f buildx.hcl \
            --set test.cache-to=type=inline \
            --set test.tags=docker.pkg.github.com/${{ github.repository }}/test:inline-slim \
            --set test.output=type=registry \
            test

  no_cache:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - run: docker buildx ls

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build the Docker images
        continue-on-error: true
        run: |
          docker buildx bake -f buildx.hcl \
            --set test.tags=docker.pkg.github.com/${{ github.repository }}/test:slim \
            --set test.output=type=registry \
            test

  inline_cache_docker:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - run: docker buildx ls

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build the Docker images
        continue-on-error: true
        run: |
          docker buildx bake -f buildx.hcl \
            --set test.cache-from=docker.pkg.github.com/${{ github.repository }}/test:docker-slim \
            --set test.cache-to=type=inline \
            --set test.tags=docker.pkg.github.com/${{ github.repository }}/test:docker-slim \
            --set test.output=type=docker \
            test
          docker push docker.pkg.github.com/${{ github.repository }}/test:docker-slim
